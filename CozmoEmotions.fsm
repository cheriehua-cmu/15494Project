from cozmo_fsm import *
import cozmo

"""
Happy: cozmo.anim.Triggers.CodeLabHappy
Surprised: cozmo.anim.Triggers.CodeLabSurprise
Sad: cozmo.anim.Triggers.CodeLabDejected
Neutral: cozmo.anim.Triggers.CodeLabIdle
Angry: cozmo.anim.Triggers.CodeLabFrustrated
Unknown: cozmo.anim.Triggers.CodeLabStaring
"""

import warnings
warnings.filterwarnings("ignore")

class CozmoEmotions(StateMachineProgram):
    class getFaceExpression(StateNode):
        def start(self, event=None):
            super().start(event)
            expressions = {cozmo.faces.FACIAL_EXPRESSION_HAPPY:cozmo.anim.Triggers.CodeLabHappy, \
            cozmo.faces.FACIAL_EXPRESSION_SURPRISED:cozmo.anim.Triggers.CodeLabSurprise, \
            cozmo.faces.FACIAL_EXPRESSION_UNKNOWN:cozmo.anim.Triggers.CodeLabStaring, \
            cozmo.faces.FACIAL_EXPRESSION_NEUTRAL:cozmo.anim.Triggers.CodeLabIdle, \
            cozmo.faces.FACIAL_EXPRESSION_ANGRY:cozmo.anim.Triggers.CodeLabCurious, \
            cozmo.faces.FACIAL_EXPRESSION_SAD:cozmo.anim.Triggers.CodeLabDejected}
            noFace = True
            for d in self.robot.world.world_map.objects:
                obj = self.robot.world.world_map.objects[d]
                if isinstance(obj, FaceObj):
                    noFace = False
                    print(expressions[obj.expression])
                    self.post_data(expressions[obj.expression])
            if noFace:
                self.post_failure()
            
    $setup {
        loop: Say("")
        loop =C=> face
        face: self.getFaceExpression()
        face =D=> AnimationTriggerNode() =C=> loop
        face =F=> Say("I can't see your face") =C=> loop
    }

from cozmo_fsm import *
import cozmo

"""
Happy: cozmo.anim.Triggers.CodeLabHappy
Surprised: cozmo.anim.Triggers.CodeLabSurprise
Sad: cozmo.anim.Triggers.CodeLabDejected
Neutral: cozmo.anim.Triggers.CodeLabIdle
Angry: cozmo.anim.Triggers.CodeLabFrustrated
Unknown: cozmo.anim.Triggers.CodeLabStaring
"""

import warnings
warnings.filterwarnings("ignore")

class CozmoEmotions(StateMachineProgram):
    class getFaceExpression(StateNode):
        def start(self, event=None):
            super().start(event)
            expressions = {cozmo.faces.FACIAL_EXPRESSION_HAPPY:cozmo.anim.Triggers.CodeLabHappy, \
            cozmo.faces.FACIAL_EXPRESSION_SURPRISED:cozmo.anim.Triggers.CodeLabSurprise, \
            cozmo.faces.FACIAL_EXPRESSION_UNKNOWN:cozmo.anim.Triggers.CodeLabStaring, \
            cozmo.faces.FACIAL_EXPRESSION_NEUTRAL:cozmo.anim.Triggers.CodeLabIDK, \
            cozmo.faces.FACIAL_EXPRESSION_ANGRY:cozmo.anim.Triggers.CodeLabCurious, \
            cozmo.faces.FACIAL_EXPRESSION_SAD:cozmo.anim.Triggers.CodeLabWondering}
            noFace = True
            for d in self.robot.world.world_map.objects:
                obj = self.robot.world.world_map.objects[d]
                if isinstance(obj, FaceObj):
                    noFace = False
                    print(expressions[obj.expression])
                    self.post_data(expressions[obj.expression])
            if noFace:
                self.post_failure()
            
    def setup(self):
        #         # loop: Say("")
        #         # loop =C=> face
        #         # face: self.getFaceExpression()
        #         # face =D=> AnimationTriggerNode() =C=> loop
        #         # face =F=> Say("I can't see your face") =C=> loop
        #         # Say("Happy") =C=> AnimationTriggerNode(cozmo.anim.Triggers.CodeLabHappy) =C=> Say("Surprised") =C=> AnimationTriggerNode(cozmo.anim.Triggers.CodeLabSurprise) =C=> Say("Unknown") =C=> AnimationTriggerNode(cozmo.anim.Triggers.CodeLabStaring) =C=> Say("Neutral") =C=> AnimationTriggerNode(cozmo.anim.Triggers.CodeLabBlink) =C=> Say("Angry") =C=> AnimationTriggerNode(cozmo.anim.Triggers.CodeLabCurious) =C=> Say("Sad") =C=> AnimationTriggerNode(cozmo.anim.Triggers.CodeLabWondering)
        #         AnimationTriggerNode(cozmo.anim.Triggers.CodeLabExcited)
        
        # Code generated by genfsm on Mon Apr 24 15:29:49 2023:
        
        animationtriggernode1 = AnimationTriggerNode(cozmo.anim.Triggers.CodeLabExcited) .set_name("animationtriggernode1") .set_parent(self)
        
        return self
